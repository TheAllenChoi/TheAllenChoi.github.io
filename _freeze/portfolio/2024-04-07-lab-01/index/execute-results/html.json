{
  "hash": "6daaa068b0458f0d9921d06e00437ff4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lab 1 - Quarto Warmup & STAT 331 Review\"\nauthor: \"Allen Choi\"\ndate: 04-07-2022\nformat: html\nembed-resources: true\neditor: source\nexecute: \n  echo: true\n  warning: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggridges)\n```\n:::\n\n\n\n## Quarto\n\nFirst, let's make sure you know how to use Markdown formatting to style a Quarto document.\n\n1.  Make this text **bold**.\n\n2.  Make this text *italicized*.\n\n3.  Make these into a bullet point list:\n\n-   Apples\n-   Bananas\n-   Potatoes\n\n4.  Edit the YAML to remove warning messages from being output in the rendered HTML file\n\n5.  Using code chunk options, make it so this chunk shows the plot but not the source code:\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/show-plot-not-source-code-1.png){width=672}\n:::\n:::\n\n\n\n6.  Using code chunk options, remove the messages about bandwidth `geom_density_ridges()` chose to use:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpg, \n       mapping = aes(y = manufacturer, x = hwy)) + \n  geom_density_ridges() +\n  labs(x = \"\",\n       y = \"\", \n       title = \"Highway Milage (mpg) for Different Car Manufacturers\"\n       )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/remove-message-1.png){width=672}\n:::\n:::\n\n\n\n7.  Using code chunk options, make it so that these plots are printed side-by-side:\n\n\n\n::: {.cell layout-ncol=\"2\"}\n\n```{.r .cell-code}\nggplot(data = mpg, \n       mapping = aes(y = manufacturer, x = hwy)) + \n  geom_boxplot() +\n  labs(x = \"\",\n       y = \"\", \n       title = \"Highway Milage (mpg) for Different Car Manufacturers\"\n       )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/side-by-side-figure-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data = mpg, \n       mapping = aes(y = manufacturer, x = hwy)) + \n  geom_density_ridges() +\n  labs(x = \"\",\n       y = \"\", \n       title = \"Highway Milage (mpg) for Different Car Manufacturers\"\n       )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/side-by-side-figure-2.png){width=672}\n:::\n:::\n\n\n\n8.  Using code chunk options, make it so this chunk shows the code but not the output:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n2 + 2\n```\n:::\n\n\n\n9.  Using code chunk options, make it so the file can still knit even though this chunk has an error\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n2 + a\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: object 'a' not found\n```\n\n\n:::\n:::\n\n\n\n10. Using code chunk options, create a descriptive `label` for each of the code chunks above.\n\n## Data Wrangling Review\n\nSince you already seen some `ggplot`s, let's do a bit of review on data handling. In this class, we will exclusively make use of tools from the `tidyverse` suite of packages to perform our data cleaning and wrangling operations. If you are less familiar with these packages or it's been some time since you used them, I would strongly recommend referencing the function documentation!\n\nFor these problems, we will continue to work with the `mpg` data frame, making various changes to the data to clean it up.\n\n11. The `fl` variable describes the type of fuel for each car, with levels: `p`, `r`, `e`, `d`, and `c`. Do some research into what each of these labels mean! Then, use the `if_else()` function to create a new variable (`fuel_type`) with two levels: `petrol` (any car using petrolium-based gas) and `alternative energy` (any car not using petrolium-based gas).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg <- mpg\n\nmpg <- mpg |> \n  mutate(fuel_type = if_else(\n    fl %in% c(\"c\", \"d\"),\n    \"alternative energy\",\n    \"petrol\"\n  ))\n```\n:::\n\n\n\n12. The `drv` variable describes if the car has front drive (`f`), rear drive (`r`), or four wheel drive (`4`). Let's make better labels for these values! Specifically, use the `case_when()` function to change the `drv` varible to have the following levels: `front`, `rear`, `four wheel`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg <- mpg |> \n  mutate(drv = case_when(\n    drv == \"f\" ~ \"front\",\n    drv == \"r\" ~ \"rear\",\n    drv == \"4\" ~ \"four wheel\"\n  ))\n```\n:::\n\n\n\n(string split + remove extra \")\" ) 13. The `trans` variable contains two pieces of information, (1) the transmission style (`auto` or `manual`) and the specific type of transmission (e.g., `l5`, `m5`). Using the `str_split()` function, create a new variable (`trans_type`) containing the specific type of transmission of each car. Once you've made this new variable, use the `rename()` function to change the name of the `trans` column to `trans_style`.\\\n*Hint: You will need to deal with the stray parenthesis!*\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg |> \n  mutate(trans = str_split(trans, pattern = \"[\\\\()]\")[[1]][2]) |> \n  rename(trans_type = trans)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 234 × 12\n   manufacturer model displ  year   cyl trans_type drv     cty   hwy fl    class\n   <chr>        <chr> <dbl> <int> <int> <chr>      <chr> <int> <int> <chr> <chr>\n 1 audi         a4      1.8  1999     4 l5         front    18    29 p     comp…\n 2 audi         a4      1.8  1999     4 l5         front    21    29 p     comp…\n 3 audi         a4      2    2008     4 l5         front    20    31 p     comp…\n 4 audi         a4      2    2008     4 l5         front    21    30 p     comp…\n 5 audi         a4      2.8  1999     6 l5         front    16    26 p     comp…\n 6 audi         a4      2.8  1999     6 l5         front    18    26 p     comp…\n 7 audi         a4      3.1  2008     6 l5         front    18    27 p     comp…\n 8 audi         a4 q…   1.8  1999     4 l5         four…    18    26 p     comp…\n 9 audi         a4 q…   1.8  1999     4 l5         four…    16    25 p     comp…\n10 audi         a4 q…   2    2008     4 l5         four…    20    28 p     comp…\n# ℹ 224 more rows\n# ℹ 1 more variable: fuel_type <chr>\n```\n\n\n:::\n:::\n\n\n\n## Getting to know your classmates\n\n14. Find someone who took Stat 331 from a different professor than you. Compare your experiences. Tell me their name and professor. List one or two things that you think you learned more about, and one or two things that they learned more about.\n\nAlisa Krasilnikov took Stat 331 with Dr. Robinson. We went over a lot more of GitHub tools and how to push/pull stuff. Alisa had a lot more exams and projects, and I believe they also had more hands-on data analysis work in groups. \n\n15. Find someone in the class who **does not** share your birth month. Tell me their name and birthday, and use R to find out how many days apart your birthdays are.\n\nAlisa has a birth month of November. She is born on November 3, 2003. Mine is May 30, 2003\n\n\n::: {.cell}\n\n```{.r .cell-code}\nas.Date(\"2003-11-03\") - as.Date(\"2003-05-30\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTime difference of 157 days\n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}