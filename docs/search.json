[
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "STAT 541 Portfolio",
    "section": "",
    "text": "Lab 1 - Quarto Warmup & STAT 331 Review\n\n\nReview of ggplot2, quarto, and dplyr\n\n\n\nAllen Choi\n\n\nApr 7, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLab 2\n\n\nAdvanced Visualizations\n\n\n\nAllen Choi\n\n\nApr 14, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLab 3\n\n\nStatic Dashboard\n\n\n\nAllen Choi\n\n\nApr 21, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLab 4\n\n\nInteractive/Dynamic Dashboard\n\n\n\nAllen Choi\n\n\nApr 28, 2025\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "portfolio/2024-04-07-lab-01/index.html",
    "href": "portfolio/2024-04-07-lab-01/index.html",
    "title": "Lab 1 - Quarto Warmup & STAT 331 Review",
    "section": "",
    "text": "library(tidyverse)\nlibrary(ggridges)"
  },
  {
    "objectID": "portfolio/2024-04-07-lab-01/index.html#quarto",
    "href": "portfolio/2024-04-07-lab-01/index.html#quarto",
    "title": "Lab 1 - Quarto Warmup & STAT 331 Review",
    "section": "Quarto",
    "text": "Quarto\nFirst, let’s make sure you know how to use Markdown formatting to style a Quarto document.\n\nMake this text bold.\nMake this text italicized.\nMake these into a bullet point list:\n\n\nApples\nBananas\nPotatoes\n\n\nEdit the YAML to remove warning messages from being output in the rendered HTML file\nUsing code chunk options, make it so this chunk shows the plot but not the source code:\n\n\n\n\n\n\n\n\n\n\n\nUsing code chunk options, remove the messages about bandwidth geom_density_ridges() chose to use:\n\n\nggplot(data = mpg, \n       mapping = aes(y = manufacturer, x = hwy)) + \n  geom_density_ridges() +\n  labs(x = \"\",\n       y = \"\", \n       title = \"Highway Milage (mpg) for Different Car Manufacturers\"\n       )\n\n\n\n\n\n\n\n\n\nUsing code chunk options, make it so that these plots are printed side-by-side:\n\nggplot(data = mpg, \n       mapping = aes(y = manufacturer, x = hwy)) + \n  geom_boxplot() +\n  labs(x = \"\",\n       y = \"\", \n       title = \"Highway Milage (mpg) for Different Car Manufacturers\"\n       )\nggplot(data = mpg, \n       mapping = aes(y = manufacturer, x = hwy)) + \n  geom_density_ridges() +\n  labs(x = \"\",\n       y = \"\", \n       title = \"Highway Milage (mpg) for Different Car Manufacturers\"\n       )\n\n\n\n\n\n\n\n\n\n\n\nUsing code chunk options, make it so this chunk shows the code but not the output:\n\n\n2 + 2\n\n\nUsing code chunk options, make it so the file can still knit even though this chunk has an error\n\n\n2 + a\n\nError: object 'a' not found\n\n\n\nUsing code chunk options, create a descriptive label for each of the code chunks above."
  },
  {
    "objectID": "portfolio/2024-04-07-lab-01/index.html#data-wrangling-review",
    "href": "portfolio/2024-04-07-lab-01/index.html#data-wrangling-review",
    "title": "Lab 1 - Quarto Warmup & STAT 331 Review",
    "section": "Data Wrangling Review",
    "text": "Data Wrangling Review\nSince you already seen some ggplots, let’s do a bit of review on data handling. In this class, we will exclusively make use of tools from the tidyverse suite of packages to perform our data cleaning and wrangling operations. If you are less familiar with these packages or it’s been some time since you used them, I would strongly recommend referencing the function documentation!\nFor these problems, we will continue to work with the mpg data frame, making various changes to the data to clean it up.\n\nThe fl variable describes the type of fuel for each car, with levels: p, r, e, d, and c. Do some research into what each of these labels mean! Then, use the if_else() function to create a new variable (fuel_type) with two levels: petrol (any car using petrolium-based gas) and alternative energy (any car not using petrolium-based gas).\n\n\nmpg &lt;- mpg\n\nmpg &lt;- mpg |&gt; \n  mutate(fuel_type = if_else(\n    fl %in% c(\"c\", \"d\"),\n    \"alternative energy\",\n    \"petrol\"\n  ))\n\n\nThe drv variable describes if the car has front drive (f), rear drive (r), or four wheel drive (4). Let’s make better labels for these values! Specifically, use the case_when() function to change the drv varible to have the following levels: front, rear, four wheel.\n\n\nmpg &lt;- mpg |&gt; \n  mutate(drv = case_when(\n    drv == \"f\" ~ \"front\",\n    drv == \"r\" ~ \"rear\",\n    drv == \"4\" ~ \"four wheel\"\n  ))\n\n(string split + remove extra “)” ) 13. The trans variable contains two pieces of information, (1) the transmission style (auto or manual) and the specific type of transmission (e.g., l5, m5). Using the str_split() function, create a new variable (trans_type) containing the specific type of transmission of each car. Once you’ve made this new variable, use the rename() function to change the name of the trans column to trans_style.\nHint: You will need to deal with the stray parenthesis!\n\nmpg |&gt; \n  mutate(trans = str_split(trans, pattern = \"[\\\\()]\")[[1]][2]) |&gt; \n  rename(trans_type = trans)\n\n# A tibble: 234 × 12\n   manufacturer model displ  year   cyl trans_type drv     cty   hwy fl    class\n   &lt;chr&gt;        &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;      &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt;\n 1 audi         a4      1.8  1999     4 l5         front    18    29 p     comp…\n 2 audi         a4      1.8  1999     4 l5         front    21    29 p     comp…\n 3 audi         a4      2    2008     4 l5         front    20    31 p     comp…\n 4 audi         a4      2    2008     4 l5         front    21    30 p     comp…\n 5 audi         a4      2.8  1999     6 l5         front    16    26 p     comp…\n 6 audi         a4      2.8  1999     6 l5         front    18    26 p     comp…\n 7 audi         a4      3.1  2008     6 l5         front    18    27 p     comp…\n 8 audi         a4 q…   1.8  1999     4 l5         four…    18    26 p     comp…\n 9 audi         a4 q…   1.8  1999     4 l5         four…    16    25 p     comp…\n10 audi         a4 q…   2    2008     4 l5         four…    20    28 p     comp…\n# ℹ 224 more rows\n# ℹ 1 more variable: fuel_type &lt;chr&gt;"
  },
  {
    "objectID": "portfolio/2024-04-07-lab-01/index.html#getting-to-know-your-classmates",
    "href": "portfolio/2024-04-07-lab-01/index.html#getting-to-know-your-classmates",
    "title": "Lab 1 - Quarto Warmup & STAT 331 Review",
    "section": "Getting to know your classmates",
    "text": "Getting to know your classmates\n\nFind someone who took Stat 331 from a different professor than you. Compare your experiences. Tell me their name and professor. List one or two things that you think you learned more about, and one or two things that they learned more about.\n\nAlisa Krasilnikov took Stat 331 with Dr. Robinson. We went over a lot more of GitHub tools and how to push/pull stuff. Alisa had a lot more exams and projects, and I believe they also had more hands-on data analysis work in groups.\n\nFind someone in the class who does not share your birth month. Tell me their name and birthday, and use R to find out how many days apart your birthdays are.\n\nAlisa has a birth month of November. She is born on November 3, 2003. Mine is May 30, 2003\n\nas.Date(\"2003-11-03\") - as.Date(\"2003-05-30\")\n\nTime difference of 157 days"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Allen Choi",
    "section": "",
    "text": "Hello! Nice to meet you!\nHi! My name is Allen Choi and I am a 4th year Statistics student here at California Polytechnic State University, San Luis Obispo! I’ll also be continuing my education here for my Master’s in Statistics next year. Some of my hobbies include reading (nonfiction and fiction) as well as running and going to the gym."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Allen Choi",
    "section": "Education",
    "text": "Education\nB.S. in Statistics, Minor in Data Science (2021-2025)\n\nCalifornia Polytechnic State University, San Luis Obispo\n\nM.S. in Statistics (2025-2026)\n\nCalifornia Polytechnic State University, San Luis Obispo"
  },
  {
    "objectID": "portfolio/2024-04-13-lab-02/index.html",
    "href": "portfolio/2024-04-13-lab-02/index.html",
    "title": "Lab 2",
    "section": "",
    "text": "Create a Quarto file for ALL Lab 2 (no separate files for Parts 1 and 2).\n\nMake sure your final file is carefully formatted, so that each analysis is clear and concise.\nBe sure your knitted .html file shows all your source code, including any function definitions."
  },
  {
    "objectID": "portfolio/2024-04-13-lab-02/index.html#dissecting-a-bad-visualization",
    "href": "portfolio/2024-04-13-lab-02/index.html#dissecting-a-bad-visualization",
    "title": "Lab 2",
    "section": "Dissecting a Bad Visualization",
    "text": "Dissecting a Bad Visualization\nBelow is an example of a less-than-ideal visualization from the collection linked above. It comes to us from data provided for the Wellcome Global Monitor 2018 report by the Gallup World Poll:\n\n\nWhile there are certainly issues with this image, do your best to tell the story of this graph in words. That is, what is this graph telling you? What do you think the authors meant to convey with it?\nEach country has a varying level of percentage of people who believe that vaccines are safe. Depending on the region which each country is in, there is an overall difference in percentage on average as well. Basically, percentage of vaccine acceptance depends on country as well as region.\nList the variables that appear to be displayed in this visualization. Hint: Variables refer to columns in the data.\nThe variables that appear to be displayed is % of vaccine acceptance, country, and region.\nNow that you’re versed in the grammar of graphics (e.g., ggplot), list the aesthetics used and which variables are mapped to each.\nx: percentage of people who believe that vaccines are safe\ny: country\ncolor: region\nWhat type of graph would you call this? Meaning, what geom would you use to produce this plot?\nI would call it a scatterplot, but with jittered points for each country, so probably geom_jitter().\nProvide at least four problems or changes that would improve this graph. Please format your changes as bullet points!\n\nIt is hard to compare countries in different regions with each other\nThe y-axis has no meaning\nThe legend is unnecessary since the labels are already there\nThere is too much going on and it takes too much time to understand the message"
  },
  {
    "objectID": "portfolio/2024-04-13-lab-02/index.html#improving-the-bad-visualization",
    "href": "portfolio/2024-04-13-lab-02/index.html#improving-the-bad-visualization",
    "title": "Lab 2",
    "section": "Improving the Bad Visualization",
    "text": "Improving the Bad Visualization\nThe data for the Wellcome Global Monitor 2018 report can be downloaded at the following site: https://wellcome.ac.uk/reports/wellcome-global-monitor/2018\n\nThere are two worksheets in the downloaded dataset file. You may need to read them in separately, but you may also just use one if it suffices.\n\nlibrary(tidyverse)\nlibrary(here)\nlibrary(plotly)\nlibrary(ggridges)\ndata_dict &lt;- readxl::read_xlsx(here(\"portfolio\", \"2024-04-13-lab-02\", \"wgm2018-dataset-crosstabs-all-countries.xlsx\"),\n                               sheet = 3)\ndata &lt;- readxl::read_xlsx(here(\"portfolio\", \"2024-04-13-lab-02\", \"wgm2018-dataset-crosstabs-all-countries.xlsx\"),\n                               sheet = 2) |&gt; \n  select(c(WP5, Q25, Regions_Report))\ndata_dict &lt;- data_dict[1, 3] |&gt; \n  rename(country = `Variable Type & Codes*`) |&gt; \n  separate_wider_delim(country, delim = \",\", names_sep = \"-\")\n\ndata_dict &lt;- data_dict[1, 1:ncol(data_dict)-1]\n\ncountry_code &lt;- data.frame(t(data_dict)) |&gt; \n  separate_wider_delim(cols = `t.data_dict.`,\n                       delim = \"=\",\n                       names_sep = \"-\") |&gt; \n  rename(code = `t.data_dict.-1`,\n         country = `t.data_dict.-2`) |&gt; \n  mutate(code = as.numeric(code))\n\nfinal &lt;- data |&gt; \n  drop_na() |&gt; \n  left_join(country_code, by = join_by(WP5 == code)) |&gt; \n  select(-WP5) |&gt; \n  mutate(Q25 = case_when(\n    Q25 == 1 ~ 1,\n    Q25 == 2 ~ 1,\n    .default = 0\n  )) |&gt; \n  group_by(country) |&gt;\n  summarize(percentage = sum(Q25) / n()) \n\nregions &lt;- data |&gt; \n  select(WP5, Regions_Report) |&gt; \n  distinct(WP5, Regions_Report) |&gt; \n  left_join(country_code, by = join_by(WP5 == code)) |&gt; \n  mutate(region = case_when(\n    Regions_Report %in% c(1, 2, 4, 5) ~ \"Sub-Saharan Africa\",\n    Regions_Report %in% c(3, 13) ~ \"Middle East / North Africa\",\n    Regions_Report %in% c(6, 7, 8) ~ \"Americas\",\n    Regions_Report %in% c(9, 10, 11, 12) ~ \"Asia\",\n    Regions_Report %in% c(15, 16, 17) ~ \"Europe\",\n    Regions_Report %in% c(14) ~ \"Former Soviet Union\",\n    .default = \"Other\"\n  )) |&gt; \n  select(country, region)\n\n\nImprove the visualization above by either re-creating it with the issues you identified fixed OR by creating a new visualization that you believe tells the same story better.\n\n\nfinal |&gt; \n  left_join(regions, by = join_by(country == country)) |&gt; \n  filter(region != \"Other\") |&gt; \n  mutate(region = factor(region,\n                         levels = c(\"Former Soviet Union\", \"Europe\", \"Americas\",\n                                    \"Middle East / North Africa\", \"Sub-Saharan Africa\", \"Asia\"))) |&gt; \n  ggplot(aes(y = region, x = percentage,\n             fill = region,\n             group = region)) +\n  stat_density_ridges(quantiles = 2, quantile_lines = 2) +\n  theme_minimal() +\n  ggtitle(\"PERCENTAGE OF PEOPLE WHO BELIEVE \\n VACCINES ARE SAFE\") +\n  theme(legend.position = \"none\",\n        panel.grid.minor.y = element_blank(),\n        panel.grid.major.y = element_blank(),\n        title = element_text(face = \"bold\")) +\n  labs(y = \"\",\n       x = \"\") +\n  scale_x_continuous(limits = c(.2, 1), labels = scales::label_percent())\n\nPicking joint bandwidth of 0.0576"
  },
  {
    "objectID": "portfolio/2024-04-13-lab-02/index.html#second-data-visualization-improvement",
    "href": "portfolio/2024-04-13-lab-02/index.html#second-data-visualization-improvement",
    "title": "Lab 2",
    "section": "Second Data Visualization Improvement",
    "text": "Second Data Visualization Improvement\nFor this second plot, you must select a plot that uses maps so you can demonstrate your proficiency with the leaflet package!\n\nSelect a data visualization in the report that you think could be improved. Be sure to cite both the page number and figure title. Do your best to tell the story of this graph in words. That is, what is this graph telling you? What do you think the authors meant to convey with it?\n\nThe map I want to use is on page 65 and is Chart 3.7: Map of trust in doctors and nurses by country. The story the visualization is trying to tell is that certain regions/countries in the world have lower trust in their doctors than other countries. For example, countries in Europe/America have higher overall trust in their doctors/nurses than countries in Asia/Eastern Europe.\nList the variables that appear to be displayed in this visualization.\n\nCountries\nTrust level for doctors/nurses\n\nNow that you’re versed in the grammar of graphics (ggplot), list the aesthetics used and which variables are specified for each.\n\nx: Countries\ncolor: Trust level\n\nWhat type of graph would you call this?\nA map with a gradient scale for trust level for each country\nList all of the problems or things you would improve about this graph.\nThe legend title is misleading as legend title states “knowledge level” when the actual data is talking about how much they trust their doctors/nurses. Also, it is hard to tell the difference between countries when the gradient is between light green and dark green.\nImprove the visualization above by either re-creating it with the issues you identified fixed OR by creating a new visualization that you believe tells the same story better.\n\n\nlibrary(leaflet)\nlibrary(rnaturalearth)\ndata &lt;- readxl::read_xlsx(here(\"portfolio\", \"2024-04-13-lab-02\", \"wgm2018-dataset-crosstabs-all-countries.xlsx\"),\n                               sheet = 2) |&gt; \n  select(c(WP5, Q11E))\n\nmap_data &lt;- data |&gt; \n  mutate(Q11E = as.character(Q11E)) |&gt; \n  group_by(WP5) |&gt; \n  mutate(Q11E = case_when(\n    Q11E == 1 ~ 1,\n    Q11E == 2 ~ 1,\n    .default = 0\n  )) |&gt; \n  summarize(percent = (sum(Q11E) / n())) |&gt; \n  left_join(country_code, by = join_by(WP5 == code)) |&gt; \n  mutate(country = case_when(\n    country == \"United States\" ~ \"United States of America\",\n    .default = country\n  ))\n\n\ncountry_map_info &lt;- ne_countries(returnclass = \"sf\")\ncountry_map_info &lt;- country_map_info |&gt; \n  inner_join(map_data, by = join_by(name == country)) |&gt; \n  mutate(percent = percent * 100,\n         percent = round(percent, digits = 2))\n  \ncolors &lt;- colorNumeric(palette = \"YlGnBu\", domain = country_map_info$percent)\ncountry_map_info |&gt; \n  leaflet() |&gt; \n  addTiles() |&gt; \n  addPolygons(color = colors(country_map_info$percent),\n              weight = 2,\n              popup = paste0(\n                \"Country:\", \" \", country_map_info$name, \" &lt;br&gt; \",\n                \"Percent:\", \" \", country_map_info$percent),\n              label = paste0(\n                \"Percent:\", \" \", country_map_info$percent, \"%\"),\n              fillOpacity = 1) |&gt; \n  addLegend(pal = colors, values = country_map_info$percent,\n            title = \"Percent Trust in Doctors/Nurses &lt;br&gt; (Response = 'A lot'/'Some')\",\n            opacity = 1)"
  },
  {
    "objectID": "portfolio/2024-04-13-lab-02/index.html#third-data-visualization-improvement",
    "href": "portfolio/2024-04-13-lab-02/index.html#third-data-visualization-improvement",
    "title": "Lab 2",
    "section": "Third Data Visualization Improvement",
    "text": "Third Data Visualization Improvement\nFor this third plot, you must use one of the other ggplot2 extension packages mentioned this week (e.g., gganimate, plotly, patchwork, cowplot).\n\nSelect a data visualization in the report that you think could be improved. Be sure to cite both the page number and figure title. Do your best to tell the story of this graph in words. That is, what is this graph telling you? What do you think the authors meant to convey with it?\n\nThe visualization I selected is on page 110 and titled Chart 5.2: Perceived Safety of Vaccines by region. I think the graph is trying to tell us that different regions of the world have extremely different views on vaccine safety. Some areas have extremely positive views while other regions have relatively negative views.\nList the variables that appear to be displayed in this visualization.\n\nRegion\nVaccine Safety Opinion\n\nNow that you’re versed in the grammar of graphics (ggplot), list the aesthetics used and which variables are specified for each.\n\nx: Region\ny: Vaccine Safety\nfill: Vaccine Safety\n\nWhat type of graph would you call this?\n\nI would call it a stacked bar plot but normalized so that each region adds up to 100%.\n\nList all of the problems or things you would improve about this graph.\n\n\n\nThe graph from top to bottom isn’t organized in any way, which makes it hard to identify any patterns\nThere is way too much information within each bar, so only selecting a specific opinion (Strongly Agree) would help a lot\nNo x-axis\n\n\n\nImprove the visualization above by either re-creating it with the issues you identified fixed OR by creating a new visualization that you believe tells the same story better.\n\n\nlibrary(gganimate)\nlibrary(gifski)\ndata &lt;- readxl::read_xlsx(here(\"portfolio\", \"2024-04-13-lab-02\", \"wgm2018-dataset-crosstabs-all-countries.xlsx\"),\n                               sheet = 2) |&gt; \n  select(c(Regions_Report, Q25))\n\ndata_dict &lt;- readxl::read_xlsx(here(\"portfolio\", \"2024-04-13-lab-02\", \"wgm2018-dataset-crosstabs-all-countries.xlsx\"),\n                               sheet = 3)\ndata_dict &lt;- data_dict[57, 3] |&gt; \n  rename(region = `Variable Type & Codes*`) |&gt; \n  separate_wider_delim(region, delim = \",\", names_sep = \"-\")\n\ndata_dict &lt;- data_dict[1, 1:ncol(data_dict)-1]\n\nregion_codes &lt;- data.frame(t(data_dict)) |&gt; \n  separate_wider_delim(cols = `t.data_dict.`,\n                       delim = \"=\",\n                       names_sep = \"-\") |&gt; \n  rename(code = `t.data_dict.-1`,\n         region = `t.data_dict.-2`) |&gt; \n  mutate(code = as.numeric(code))\n\ncleaned_data &lt;- data |&gt; \n  drop_na() |&gt; \n  mutate(Q25 = case_when(\n    Q25 == 1 ~ \"Strongly Agree\",\n    Q25 == 2 ~ \"Somewhat Agree\",\n    Q25 == 4 ~ \"Somewhat Disagree\",\n    Q25 == 5 ~ \"Strongly Disagree\",\n    .default = \"\"\n  )) |&gt; \n  left_join(region_codes, by = join_by(Regions_Report == code)) |&gt; \n  filter(region != \"Not assigned\") |&gt; \n  group_by(region) |&gt; \n  summarize(strongly_agree = sum(Q25 == \"Strongly Agree\") / n(),\n            somewhat_agree = sum(Q25 == \"Somewhat Agree\") / n(),\n            somewhat_disagree = sum(Q25 == \"Somewhat Disagree\") / n(),\n            strongly_disagree = sum(Q25 == \"Strongly Disagree\") / n()) |&gt; \n  arrange(desc(strongly_agree))\n\narranged &lt;- cleaned_data$region\nplot &lt;- cleaned_data |&gt; \n  pivot_longer(cols = !region) |&gt; \n  mutate(name = case_when(\n    name == \"strongly_agree\" ~ \"Strongly Agree\",\n    name == \"somewhat_agree\" ~ \"Somewhat Agree\",\n    name == \"somewhat_disagree\" ~ \"Somewhat Disagree\",\n    name == \"strongly_disagree\" ~ \"Strongly Disagree\"\n  )) |&gt; \n  mutate(name = factor(name, \n                       levels = c(\"Strongly Agree\", \"Somewhat Agree\",\n                                  \"Somewhat Disagree\", \"Strongly Disagree\")),\n         region = factor(region, levels = arranged)) |&gt;\n  ggplot(aes(y = name, x = value, fill = name)) +\n  geom_bar(stat = \"identity\") +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n        panel.grid.minor.y = element_blank(),\n        panel.grid.major.y = element_blank()) +\n  labs(y = \"\", x = \"\") +\n  scale_x_continuous(limits = c(0, 0.8), labels = scales::label_percent())\n\nfinal &lt;- plot + transition_states(region)\nfinal +\n  ggtitle(\"Percent Opinion on Vaccine Safety in {closest_state}\")"
  }
]